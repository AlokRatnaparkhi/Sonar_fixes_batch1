// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.jobrouter.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Contains the weight percentage and label selectors to be applied if selected for weighted distributions. */
@Fluent
public final class QueueWeightedAllocationInternal {
    /*
     * The percentage of this weight, expressed as a fraction of 1.
     */
    @JsonProperty(value = "weight", required = true)
    private double weight;

    /*
     * A collection of label selectors that will be applied if this allocation
     * is selected.
     */
    @JsonProperty(value = "labelSelectors", required = true)
    private List<QueueSelectorInternal> labelSelectors;

    /**
     * Get the weight property: The percentage of this weight, expressed as a fraction of 1.
     *
     * @return the weight value.
     */
    public double getWeight() {
        return this.weight;
    }

    /**
     * Set the weight property: The percentage of this weight, expressed as a fraction of 1.
     *
     * @param weight the weight value to set.
     * @return the QueueWeightedAllocationInternal object itself.
     */
    public QueueWeightedAllocationInternal setWeight(double weight) {
        this.weight = weight;
        return this;
    }

    /**
     * Get the labelSelectors property: A collection of label selectors that will be applied if this allocation is
     * selected.
     *
     * @return the labelSelectors value.
     */
    public List<QueueSelectorInternal> getLabelSelectors() {
        return this.labelSelectors;
    }

    /**
     * Set the labelSelectors property: A collection of label selectors that will be applied if this allocation is
     * selected.
     *
     * @param labelSelectors the labelSelectors value to set.
     * @return the QueueWeightedAllocationInternal object itself.
     */
    public QueueWeightedAllocationInternal setLabelSelectors(List<QueueSelectorInternal> labelSelectors) {
        this.labelSelectors = labelSelectors;
        return this;
    }
}
